import { Select } from 'antd';
import React, { useEffect, useState } from 'react'
import CustomButton from '../../components/CustomButton';
import useSettings from '../../hooks/postData/useSettings';
import { Option } from 'antd/es/mentions';
import { BASEURL } from '../../utils/url';
 
export default function SettingForm({ data, loading }) {


    const { formik, isLoading, setFile } = useSettings()
    const [logoPreview, setLogoPreview] = useState(null);
    const [isModalOpen, setIsModalOpen] = useState(false);

    const ToggleSettingsUpdatedOpen = () => {
        setIsModalOpen(!isModalOpen);
    };


    const url = BASEURL 

    console.log(url()+"media/"+data?.logo);

    useEffect(() => {
        formik.setFieldValue("name", data?.name)
        formik.setFieldValue("current_session", data?.current_session) 
        formik.setFieldValue("code", data?.code)
        formik.setFieldValue("result_after_test", data?.result_after_test)
        formik.setFieldValue("semester", data?.semester)
        formik.setFieldValue("type", data?.type)
        setLogoPreview(url()+"media/"+data?.logo?.replace("app", ""))
    }, [data, loading]) 


    console.log(data);
    console.log(formik?.values);

    // Handle logo upload
    const handleLogoUpload = (e) => {
        const file = e.target.files[0];
        if (file) {
            setFile(file)

            // Create a preview of the uploaded image
            const reader = new FileReader();
            reader.onloadend = () => {
                setLogoPreview(reader.result);
            };
            reader.readAsDataURL(file);
        }
    };

    // Handle form submission
    const handleSubmit = (e) => {
        e.preventDefault();
        formik.handleSubmit()
        // Reset form fields after submission if needed
    };

    return (
        <form onSubmit={handleSubmit}>
            <div className="border-b pb-3 my-5">
                <h2 className="text-lg font-semibold px-5">Settings</h2>
            </div>
            {/* School Logo Upload */}
            <h2 className="font-medium py-2">School Logo</h2>
            <div className="flex items-center mb-6">
                {logoPreview ? (
                    <img
                        src={logoPreview}
                        alt="Logo Preview"
                        className="w-20 h-20 rounded-full object-cover border border-dashed"
                    />
                ) : (
                    <div className="w-20 h-20 bg-gray-200 rounded-full flex items-center justify-center text-gray-600 text-lg">
                        CN
                    </div>
                )}
                <div className="ml-4">
                    <label
                        htmlFor="upload-logo"
                        className="text-[#ff6636] font-bold text-sm cursor-pointer"
                    >
                        Upload your photo
                    </label>
                    <input
                        id="upload-logo"
                        type="file"
                        accept="image/*"
                        className="hidden"
                        onChange={handleLogoUpload}
                    />
                </div>
            </div>

            {/* School Name */}
            <div className="mb-6">
                <label
                    className="block text-black font-medium text-sm mb-2"
                    htmlFor="school-name"
                >
                    School Name
                </label>
                <input
                    id="school-name"
                    type="text"
                    name="name"
                    onChange={formik.handleChange}
                    value={formik?.values?.name ?? data?.name}
                    placeholder="School name..."
                    className="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-orange-300"
                />
            </div>

            {/* Current Session */}
            <div className="mb-6">
                <label
                    className="block text-black font-medium text-sm mb-2"
                    htmlFor="current-session"
                >
                    Current Session
                </label>
                <select
                    id="current-session"
                    name="current_session"
                    onChange={formik.handleChange}
                    value={formik?.values?.current_session}
                    className="w-full px-4 py-2 text-gray-400 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-orange-300"
                >
                    <option value={""} >Select Session</option>
                    <option>2023/2024</option>
                    <option>2022/2023</option>
                </select>
            </div>

            {/* Current Semester */}
            <div className="mb-6">
                <label
                    className="block text-black font-medium text-sm mb-2"
                    htmlFor="current-semester"
                >
                    Current Semester
                </label> 
                <select
                    id="current-session"
                    name="semester"
                    onChange={formik.handleChange}
                    value={formik?.values?.semester}
                    className="w-full px-4 py-2 text-gray-400 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-orange-300"
                >
                    <option value={""} >Select Semester</option>
                    <option>Rain</option>
                    <option> Harmattan</option>
                </select>
            </div>
            <div className="mb-6">
                <label
                    className="block text-black font-medium text-sm mb-2"
                    htmlFor="current-semester"
                >
                    Display Results Immediately After Test?
                </label> 
                <select
                    id="current-session"
                    name="result_after_test"
                    onChange={formik.handleChange}
                    value={formik?.values?.result_after_test}
                    className="w-full px-4 py-2 text-gray-400 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-orange-300"
                >
                    <option value={""} >Select Option</option>
                    <option value={"true"} >Yes</option>
                    <option value={"false"} >No</option>
                </select>
            </div>

            {/* Buttons */}


            <div className="flex justify-between gap-2 pb-8 pt-6 items-center">
                <button
                    type="button"
                    className="bg-gray-100 text-gray-500 border-none rounded-lg hover:bg-gray-200 px-4 h-[40px] w-full "
                >
                    Cancel
                </button>
                <CustomButton title="Update Settings" isLoading={isLoading} type="submit" />
            </div>

        </form>
    )
}
